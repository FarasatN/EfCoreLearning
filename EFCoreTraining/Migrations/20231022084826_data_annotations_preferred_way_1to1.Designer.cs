//// <auto-generated />
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Migrations;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//#nullable disable

//namespace EFCoreTraining.Migrations
//{
//    [DbContext(typeof(EfCoreTrainingContext))]
//    [Migration("20231022084826_data_annotations_preferred_way_1to1")]
//    partial class data_annotations_preferred_way_1to1
//    {
//        /// <inheritdoc />
//        protected override void BuildTargetModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "7.0.10")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("Email", b =>
//                {
//                    b.Property<int>("Id")
//                        .HasColumnType("int");

//                    b.Property<string>("EmailAddress")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.ToTable("Emails");
//                });

//            modelBuilder.Entity("Employee", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("EmployeeName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.ToTable("Employees");
//                });

//            modelBuilder.Entity("Email", b =>
//                {
//                    b.HasOne("Employee", "Employee")
//                        .WithOne("Email")
//                        .HasForeignKey("Email", "Id")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Employee");
//                });

//            modelBuilder.Entity("Employee", b =>
//                {
//                    b.Navigation("Email")
//                        .IsRequired();
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
